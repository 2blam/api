# Environment
# Specify Rails environment: production or development
RAILS_ENV=production

# Secret key base for production, if not set it will be generated
SECRET_KEY_BASE=

# Allow only specified origins. In development all origins are allowed
# If left blank, then all origin will be allowed (denoted with '*')
# Example:
# ALLOW_ORIGIN=www.judge0.tk judge0.tk www.example.com blog.example.com
ALLOW_ORIGIN=


# Database
# Specify redis host. Default is localhost
REDIS_HOST=redis

# Postgres host. Default is localhost
POSTGRES_HOST=pg

# Name of the database to use. Default is 'postgres'
POSTGRES_DB=

# User who can access this database. Default is 'postgres'
POSTGRES_USER=

# Password of the user. Cannot be blank
POSTGRES_PASSWORD=YourPasswordHere1234


# Judge
# Limit run time of the program in seconds. Fractional numbers are allowed.
#	Time in which the OS assigns the processor to different tasks is not counted.
# Default: 1
CPU_TIME_LIMIT=

# When a time limit is exceeded, wait for extra time in seconds, before
# killing the program. This has the advantage that the real execution time
# is reported, even though it slightly exceeds the limit. Fractional
# numbers are again allowed.
# Default: 0.5
CPU_EXTRA_TIME=

# Limit wall-clock time in seconds. Fractional values are allowed.
# This clock measures the time from the start of the program to its exit,
# so it does not stop when the program has lost the CPU or when it is waiting
# for an external event. We recommend to use CPU_TIME_LIMIT as the main limit,
# but set WALL_TIME_LIMIT to a much higher value as a precaution against
# sleeping programs.
# Default: 3
WALL_TIME_LIMIT=

# Limit address space of the program in kilobytes.
# Default: 256000
MEMORY_LIMIT=

# Limit process stack in kilobytes
# Default: 256000
STACK_LIMIT=

# Maximum number of processes and/or threads the program can create. If left
# empty then arbitrary number of processes can be run.
# Default: empty, i.e. arbitrary number of processes can be run
MAX_PROCESSES_AND_OR_THREADS=

# If set then MEMORY_LIMIT will be used as per process and thread. If left empty
# then MEMORY_LIMIT is set as a total limit for all processes and threads.
# Default: empty, i.e. MEMORY_LIMIT is set as a total limit for all processes and threads
ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT=

# If set then TIME_LIMIT will be used as per process and thread. If left empty
# then TIME_LIMIT is set as a total limit for all processes and threads to finish.
# Default empty, i.e. TIME_LIMIT is set as a total limit for all processes and threads
ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT=
